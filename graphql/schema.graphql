
type Task {
    id: ID!
    title: String!
    description: String!
    dueDate: DateTime!
    status: TaskStatus!
    user: User!
}

type User {
    id: ID!
    name: String!
    email: String!
    tasks: [Task!]!
}

enum TaskStatus {
    NOT_STARTED
    IN_PROGRESS
    COMPLETED
}

type Query {
    tasks: [Task!]!
    task(id: ID!): Task
    users: [User!]!
    user(id: ID!): User
}

type Mutation {
    createTask(input: CreateTaskInput!): Task!
    updateTask(id: ID!, input: UpdateTaskInput!): Task!
    deleteTask(id: ID!): ID!
}

input CreateTaskInput {
    title: String!
    description: String!
    dueDate: DateTime!
    status: TaskStatus!
    userId: ID!
}

input UpdateTaskInput {
    title: String
    description: String
    dueDate: DateTime!
    status: TaskStatus
}
